{
    "openapi": "3.0.3",
    "info": {
        "title": "Mobile API",
        "description": "Membuat API untuk tugas besar Mobile Development",
        "version": "1.0.0",
        "contact": {
            "name": "Kelompok 7"
        }
    },
    "servers": [
        {
            "description": "Tugas Besar Mobile Development",
            "url": "http://localhost:8000/api/"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": ["User"],
                "summary": "Register new User",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "Julyant Anggara": {
                                    "description": "Example create user name Julyant Anggara",
                                    "value": {
                                        "username": "Julyant Anggara",
                                        "email": "julyant.anggara@gmail.com",
                                        "password": "password123",
                                        "password_confirmation": "password123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success register",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "username": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "description": "Success register",
                                        "value": {
                                            "status": "success",
                                            "code": 200,
                                            "message": "Registration Successfully",
                                            "data": {
                                                "id": "1",
                                                "username": "Julyant Anggara",
                                                "email": "julyant.anggara@gmail.com",
                                                "Token": "12345678"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Input data is not valid",
                                        "value": {
                                            "status": "bad request",
                                            "code": 400,
                                            "message": "Input data is not valid",
                                            "errors": {
                                                "username": "Username field is required",
                                                "email": "Input data is not valid",
                                                "password": "Input data is not valid",
                                                "password_confirmation": "Input data is not valid"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Internal Server Error",
                                        "value": {
                                            "status": "error",
                                            "code": 500,
                                            "message": "Internal Server Error",
                                            "errors": {
                                                "message": "Internal Server Error"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": ["User"],
                "summary": "Login User",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "Julyant Anggara": {
                                    "description": "Example login user name Julyant Anggara",
                                    "value": {
                                        "email": "julyant.anggara@gmail.com",
                                        "password": "password123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "username": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "description": "Success register",
                                        "value": {
                                            "status": "success",
                                            "code": 200,
                                            "message": "Login success",
                                            "data": {
                                                "id": "1",
                                                "username": "Julyant Anggara",
                                                "email": "julyant.anggara@gmail.com",
                                                "Token": "12345678"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Errors": {
                                        "description": "Input data is not valid",
                                        "value": {
                                            "status": "bad request",
                                            "code": 400,
                                            "message": "Input data is not valid",
                                            "errors": {
                                                "message": "Email or Password is not valid",
                                                "email": "email field is required",
                                                "password": "password field is required"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Internal Server Error",
                                        "value": {
                                            "status": "error",
                                            "code": 500,
                                            "message": "Internal Server Error",
                                            "errors": {
                                                "message": "Internal Server Error"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout/": {
            "post": {
                "tags": ["User"],
                "summary": "Logout",
                "security": [
                    {
                        "UserAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Internal Server Error",
                                        "value": {
                                            "status": "error",
                                            "code": 500,
                                            "message": "Internal Server Error",
                                            "errors": {
                                                "message": "Internal Server Error"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": ["User"],
                "summary": "Get Current Users",
                "security": [
                    {
                        "UserAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Get Current User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "integer"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "username": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "description": "Success Get Current User",
                                        "value": {
                                            "data": {
                                                "status": "success",
                                                "code": 200,
                                                "message": "Get Current User Successfully",
                                                "data": {
                                                    "id": "1",
                                                    "username": "Julyant Anggara",
                                                    "email": "julyant.anggara@gmail.com"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "integer"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "errors": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Unauthorized",
                                        "value": {
                                            "status": "unauthorized",
                                            "code": 401,
                                            "message": "Unauthorized",
                                            "errors": {
                                                "message": "Unauthorized"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Internal Server Error",
                                        "value": {
                                            "status": "error",
                                            "code": 500,
                                            "message": "Internal Server Error",
                                            "errors": {
                                                "message": "Internal Server Error"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["User"],
                "summary": "Update Current User",
                "security": [
                    {
                        "UserAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "old_password": {
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success Update User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "integer"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "examples": {
                                    "Errors": {
                                        "description": "Input data is not valid",
                                        "value": {
                                            "status": "bad request",
                                            "code": 400,
                                            "message": "Input data is not valid",
                                            "errors": {
                                                "old_password": "Password field is required",
                                                "new_password": "Password field is required"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "integer"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "errors": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Unauthorized",
                                        "value": {
                                            "status": "unauthorized",
                                            "code": 401,
                                            "message": "Unauthorized",
                                            "errors": {
                                                "message": "Unauthorized"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["User"],
                "summary": "Delete Current User",
                "security": [
                    {
                        "UserAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Delete User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "integer"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "description": "Success Delete User",
                                        "value": {
                                            "status": "success",
                                            "code": 200,
                                            "message": "Delete User Successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "integer"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "errors": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Unauthorized",
                                        "value": {
                                            "status": "unauthorized",
                                            "code": 401,
                                            "message": "Unauthorized",
                                            "errors": {
                                                "message": "Unauthorized"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "examples": {
                                    "Error": {
                                        "description": "Internal Server Error",
                                        "value": {
                                            "status": "error",
                                            "code": 500,
                                            "message": "Internal Server Error",
                                            "errors": {
                                                "message": "Internal Server Error"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "UserAuth": {
                "description": "Authentication for API",
                "type": "apiKey",
                "in": "header",
                "name": "Authorization"
            }
        }
    }
}
